{"pages":[{"title":"","text":"var NexT = window.NexT || {}; var CONFIG = { root: '/', scheme: 'Muse', version: '5.1.4', sidebar: {\"position\":\"left\",\"display\":\"post\",\"offset\":12,\"b2t\":false,\"scrollpercent\":false,\"onmobile\":false}, fancybox: true, tabs: true, motion: {\"enable\":true,\"async\":false,\"transition\":{\"post_block\":\"fadeIn\",\"post_header\":\"slideDownIn\",\"post_body\":\"slideDownIn\",\"coll_header\":\"slideLeftIn\",\"sidebar\":\"slideUpIn\"}}, duoshuo: { userId: '0', author: '博主' }, algolia: { applicationID: '', apiKey: '', indexName: '', hits: {\"per_page\":10}, labels: {\"input_placeholder\":\"Search for Posts\",\"hits_empty\":\"We didn't find any results for the search: ${query}\",\"hits_stats\":\"${hits} results found in ${time} ms\"} } }; tags | Grace Chen Grace Chen 首页 分类 标签 搜索 tags 暂无标签 Crace Chen 1 日志 &copy; 2020 Grace Chen Happy Birthday! if (Object.prototype.toString.call(window.Promise) !== '[object Function]') { window.Promise = null; } // Popup Window; var isfetched = false; var isXml = true; // Search DB path; var search_path = \"search.xml\"; if (search_path.length === 0) { search_path = \"search.xml\"; } else if (/json$/i.test(search_path)) { isXml = false; } var path = \"/\" + search_path; // monitor main search box; var onPopupClose = function (e) { $('.popup').hide(); $('#local-search-input').val(''); $('.search-result-list').remove(); $('#no-result').remove(); $(\".local-search-pop-overlay\").remove(); $('body').css('overflow', ''); } function proceedsearch() { $(\"body\") .append('') .css('overflow', 'hidden'); $('.search-popup-overlay').click(onPopupClose); $('.popup').toggle(); var $localSearchInput = $('#local-search-input'); $localSearchInput.attr(\"autocapitalize\", \"none\"); $localSearchInput.attr(\"autocorrect\", \"off\"); $localSearchInput.focus(); } // search function; var searchFunc = function(path, search_id, content_id) { 'use strict'; // start loading animation $(\"body\") .append('' + '' + '' + '' + '') .css('overflow', 'hidden'); $(\"#search-loading-icon\").css('margin', '20% auto 0 auto').css('text-align', 'center'); $.ajax({ url: path, dataType: isXml ? \"xml\" : \"json\", async: true, success: function(res) { // get the contents from search data isfetched = true; $('.popup').detach().appendTo('.header-inner'); var datas = isXml ? $(\"entry\", res).map(function() { return { title: $(\"title\", this).text(), content: $(\"content\",this).text(), url: $(\"url\" , this).text() }; }).get() : res; var input = document.getElementById(search_id); var resultContent = document.getElementById(content_id); var inputEventFunction = function() { var searchText = input.value.trim().toLowerCase(); var keywords = searchText.split(/[\\s\\-]+/); if (keywords.length > 1) { keywords.push(searchText); } var resultItems = []; if (searchText.length > 0) { // perform local searching datas.forEach(function(data) { var isMatch = false; var hitCount = 0; var searchTextCount = 0; var title = data.title.trim(); var titleInLowerCase = title.toLowerCase(); var content = data.content.trim().replace(/]+>/g,\"\"); var contentInLowerCase = content.toLowerCase(); var articleUrl = decodeURIComponent(data.url); var indexOfTitle = []; var indexOfContent = []; // only match articles with not empty titles if(title != '') { keywords.forEach(function(keyword) { function getIndexByWord(word, text, caseSensitive) { var wordLen = word.length; if (wordLen === 0) { return []; } var startPosition = 0, position = [], index = []; if (!caseSensitive) { text = text.toLowerCase(); word = word.toLowerCase(); } while ((position = text.indexOf(word, startPosition)) > -1) { index.push({position: position, word: word}); startPosition = position + wordLen; } return index; } indexOfTitle = indexOfTitle.concat(getIndexByWord(keyword, titleInLowerCase, false)); indexOfContent = indexOfContent.concat(getIndexByWord(keyword, contentInLowerCase, false)); }); if (indexOfTitle.length > 0 || indexOfContent.length > 0) { isMatch = true; hitCount = indexOfTitle.length + indexOfContent.length; } } // show search results if (isMatch) { // sort index by position of keyword [indexOfTitle, indexOfContent].forEach(function (index) { index.sort(function (itemLeft, itemRight) { if (itemRight.position !== itemLeft.position) { return itemRight.position - itemLeft.position; } else { return itemLeft.word.length - itemRight.word.length; } }); }); // merge hits into slices function mergeIntoSlice(text, start, end, index) { var item = index[index.length - 1]; var position = item.position; var word = item.word; var hits = []; var searchTextCountInSlice = 0; while (position + word.length position) { index.pop(); } else { break; } } } searchTextCount += searchTextCountInSlice; return { hits: hits, start: start, end: end, searchTextCount: searchTextCountInSlice }; } var slicesOfTitle = []; if (indexOfTitle.length != 0) { slicesOfTitle.push(mergeIntoSlice(title, 0, title.length, indexOfTitle)); } var slicesOfContent = []; while (indexOfContent.length != 0) { var item = indexOfContent[indexOfContent.length - 1]; var position = item.position; var word = item.word; // cut out 100 characters var start = position - 20; var end = position + 80; if(start < 0){ start = 0; } if (end < position + word.length) { end = position + word.length; } if(end > content.length){ end = content.length; } slicesOfContent.push(mergeIntoSlice(content, start, end, indexOfContent)); } // sort slices in content by search text's count and hits' count slicesOfContent.sort(function (sliceLeft, sliceRight) { if (sliceLeft.searchTextCount !== sliceRight.searchTextCount) { return sliceRight.searchTextCount - sliceLeft.searchTextCount; } else if (sliceLeft.hits.length !== sliceRight.hits.length) { return sliceRight.hits.length - sliceLeft.hits.length; } else { return sliceLeft.start - sliceRight.start; } }); // select top N slices in content var upperBound = parseInt('1'); if (upperBound >= 0) { slicesOfContent = slicesOfContent.slice(0, upperBound); } // highlight title and content function highlightKeyword(text, slice) { var result = ''; var prevEnd = slice.start; slice.hits.forEach(function (hit) { result += text.substring(prevEnd, hit.position); var end = hit.position + hit.length; result += '' + text.substring(hit.position, end) + ''; prevEnd = end; }); result += text.substring(prevEnd, slice.end); return result; } var resultItem = ''; if (slicesOfTitle.length != 0) { resultItem += \"\" + highlightKeyword(title, slicesOfTitle[0]) + \"\"; } else { resultItem += \"\" + title + \"\"; } slicesOfContent.forEach(function (slice) { resultItem += \"\" + \"\" + highlightKeyword(content, slice) + \"...\" + \"\"; }); resultItem += \"\"; resultItems.push({ item: resultItem, searchTextCount: searchTextCount, hitCount: hitCount, id: resultItems.length }); } }) }; if (keywords.length === 1 && keywords[0] === \"\") { resultContent.innerHTML = '' } else if (resultItems.length === 0) { resultContent.innerHTML = '' } else { resultItems.sort(function (resultLeft, resultRight) { if (resultLeft.searchTextCount !== resultRight.searchTextCount) { return resultRight.searchTextCount - resultLeft.searchTextCount; } else if (resultLeft.hitCount !== resultRight.hitCount) { return resultRight.hitCount - resultLeft.hitCount; } else { return resultRight.id - resultLeft.id; } }); var searchResultList = ''; resultItems.forEach(function (result) { searchResultList += result.item; }) searchResultList += \"\"; resultContent.innerHTML = searchResultList; } } if ('auto' === 'auto') { input.addEventListener('input', inputEventFunction); } else { $('.search-icon').click(inputEventFunction); input.addEventListener('keypress', function (event) { if (event.keyCode === 13) { inputEventFunction(); } }); } // remove loading animation $(\".local-search-pop-overlay\").remove(); $('body').css('overflow', ''); proceedsearch(); } }); } // handle and trigger popup window; $('.popup-trigger').click(function(e) { e.stopPropagation(); if (isfetched === false) { searchFunc(path, 'local-search-input', 'local-search-result'); } else { proceedsearch(); }; }); $('.popup-btn-close').click(onPopupClose); $('.popup').click(function(e){ e.stopPropagation(); }); $(document).on('keyup', function (event) { var shouldDismissSearchPopup = event.which === 27 && $('.search-popup').is(':visible'); if (shouldDismissSearchPopup) { onPopupClose(); } });","link":"/tags/index.html"},{"title":"","text":"var NexT = window.NexT || {}; var CONFIG = { root: '/', scheme: 'Muse', version: '5.1.4', sidebar: {\"position\":\"left\",\"display\":\"post\",\"offset\":12,\"b2t\":false,\"scrollpercent\":false,\"onmobile\":false}, fancybox: true, tabs: true, motion: {\"enable\":true,\"async\":false,\"transition\":{\"post_block\":\"fadeIn\",\"post_header\":\"slideDownIn\",\"post_body\":\"slideDownIn\",\"coll_header\":\"slideLeftIn\",\"sidebar\":\"slideUpIn\"}}, duoshuo: { userId: '0', author: '博主' }, algolia: { applicationID: '', apiKey: '', indexName: '', hits: {\"per_page\":10}, labels: {\"input_placeholder\":\"Search for Posts\",\"hits_empty\":\"We didn't find any results for the search: ${query}\",\"hits_stats\":\"${hits} results found in ${time} ms\"} } }; categories | Grace Chen Grace Chen 首页 分类 标签 搜索 categories 暂无分类 Crace Chen 1 日志 &copy; 2020 Grace Chen Happy Birthday! if (Object.prototype.toString.call(window.Promise) !== '[object Function]') { window.Promise = null; } // Popup Window; var isfetched = false; var isXml = true; // Search DB path; var search_path = \"search.xml\"; if (search_path.length === 0) { search_path = \"search.xml\"; } else if (/json$/i.test(search_path)) { isXml = false; } var path = \"/\" + search_path; // monitor main search box; var onPopupClose = function (e) { $('.popup').hide(); $('#local-search-input').val(''); $('.search-result-list').remove(); $('#no-result').remove(); $(\".local-search-pop-overlay\").remove(); $('body').css('overflow', ''); } function proceedsearch() { $(\"body\") .append('') .css('overflow', 'hidden'); $('.search-popup-overlay').click(onPopupClose); $('.popup').toggle(); var $localSearchInput = $('#local-search-input'); $localSearchInput.attr(\"autocapitalize\", \"none\"); $localSearchInput.attr(\"autocorrect\", \"off\"); $localSearchInput.focus(); } // search function; var searchFunc = function(path, search_id, content_id) { 'use strict'; // start loading animation $(\"body\") .append('' + '' + '' + '' + '') .css('overflow', 'hidden'); $(\"#search-loading-icon\").css('margin', '20% auto 0 auto').css('text-align', 'center'); $.ajax({ url: path, dataType: isXml ? \"xml\" : \"json\", async: true, success: function(res) { // get the contents from search data isfetched = true; $('.popup').detach().appendTo('.header-inner'); var datas = isXml ? $(\"entry\", res).map(function() { return { title: $(\"title\", this).text(), content: $(\"content\",this).text(), url: $(\"url\" , this).text() }; }).get() : res; var input = document.getElementById(search_id); var resultContent = document.getElementById(content_id); var inputEventFunction = function() { var searchText = input.value.trim().toLowerCase(); var keywords = searchText.split(/[\\s\\-]+/); if (keywords.length > 1) { keywords.push(searchText); } var resultItems = []; if (searchText.length > 0) { // perform local searching datas.forEach(function(data) { var isMatch = false; var hitCount = 0; var searchTextCount = 0; var title = data.title.trim(); var titleInLowerCase = title.toLowerCase(); var content = data.content.trim().replace(/]+>/g,\"\"); var contentInLowerCase = content.toLowerCase(); var articleUrl = decodeURIComponent(data.url); var indexOfTitle = []; var indexOfContent = []; // only match articles with not empty titles if(title != '') { keywords.forEach(function(keyword) { function getIndexByWord(word, text, caseSensitive) { var wordLen = word.length; if (wordLen === 0) { return []; } var startPosition = 0, position = [], index = []; if (!caseSensitive) { text = text.toLowerCase(); word = word.toLowerCase(); } while ((position = text.indexOf(word, startPosition)) > -1) { index.push({position: position, word: word}); startPosition = position + wordLen; } return index; } indexOfTitle = indexOfTitle.concat(getIndexByWord(keyword, titleInLowerCase, false)); indexOfContent = indexOfContent.concat(getIndexByWord(keyword, contentInLowerCase, false)); }); if (indexOfTitle.length > 0 || indexOfContent.length > 0) { isMatch = true; hitCount = indexOfTitle.length + indexOfContent.length; } } // show search results if (isMatch) { // sort index by position of keyword [indexOfTitle, indexOfContent].forEach(function (index) { index.sort(function (itemLeft, itemRight) { if (itemRight.position !== itemLeft.position) { return itemRight.position - itemLeft.position; } else { return itemLeft.word.length - itemRight.word.length; } }); }); // merge hits into slices function mergeIntoSlice(text, start, end, index) { var item = index[index.length - 1]; var position = item.position; var word = item.word; var hits = []; var searchTextCountInSlice = 0; while (position + word.length position) { index.pop(); } else { break; } } } searchTextCount += searchTextCountInSlice; return { hits: hits, start: start, end: end, searchTextCount: searchTextCountInSlice }; } var slicesOfTitle = []; if (indexOfTitle.length != 0) { slicesOfTitle.push(mergeIntoSlice(title, 0, title.length, indexOfTitle)); } var slicesOfContent = []; while (indexOfContent.length != 0) { var item = indexOfContent[indexOfContent.length - 1]; var position = item.position; var word = item.word; // cut out 100 characters var start = position - 20; var end = position + 80; if(start < 0){ start = 0; } if (end < position + word.length) { end = position + word.length; } if(end > content.length){ end = content.length; } slicesOfContent.push(mergeIntoSlice(content, start, end, indexOfContent)); } // sort slices in content by search text's count and hits' count slicesOfContent.sort(function (sliceLeft, sliceRight) { if (sliceLeft.searchTextCount !== sliceRight.searchTextCount) { return sliceRight.searchTextCount - sliceLeft.searchTextCount; } else if (sliceLeft.hits.length !== sliceRight.hits.length) { return sliceRight.hits.length - sliceLeft.hits.length; } else { return sliceLeft.start - sliceRight.start; } }); // select top N slices in content var upperBound = parseInt('1'); if (upperBound >= 0) { slicesOfContent = slicesOfContent.slice(0, upperBound); } // highlight title and content function highlightKeyword(text, slice) { var result = ''; var prevEnd = slice.start; slice.hits.forEach(function (hit) { result += text.substring(prevEnd, hit.position); var end = hit.position + hit.length; result += '' + text.substring(hit.position, end) + ''; prevEnd = end; }); result += text.substring(prevEnd, slice.end); return result; } var resultItem = ''; if (slicesOfTitle.length != 0) { resultItem += \"\" + highlightKeyword(title, slicesOfTitle[0]) + \"\"; } else { resultItem += \"\" + title + \"\"; } slicesOfContent.forEach(function (slice) { resultItem += \"\" + \"\" + highlightKeyword(content, slice) + \"...\" + \"\"; }); resultItem += \"\"; resultItems.push({ item: resultItem, searchTextCount: searchTextCount, hitCount: hitCount, id: resultItems.length }); } }) }; if (keywords.length === 1 && keywords[0] === \"\") { resultContent.innerHTML = '' } else if (resultItems.length === 0) { resultContent.innerHTML = '' } else { resultItems.sort(function (resultLeft, resultRight) { if (resultLeft.searchTextCount !== resultRight.searchTextCount) { return resultRight.searchTextCount - resultLeft.searchTextCount; } else if (resultLeft.hitCount !== resultRight.hitCount) { return resultRight.hitCount - resultLeft.hitCount; } else { return resultRight.id - resultLeft.id; } }); var searchResultList = ''; resultItems.forEach(function (result) { searchResultList += result.item; }) searchResultList += \"\"; resultContent.innerHTML = searchResultList; } } if ('auto' === 'auto') { input.addEventListener('input', inputEventFunction); } else { $('.search-icon').click(inputEventFunction); input.addEventListener('keypress', function (event) { if (event.keyCode === 13) { inputEventFunction(); } }); } // remove loading animation $(\".local-search-pop-overlay\").remove(); $('body').css('overflow', ''); proceedsearch(); } }); } // handle and trigger popup window; $('.popup-trigger').click(function(e) { e.stopPropagation(); if (isfetched === false) { searchFunc(path, 'local-search-input', 'local-search-result'); } else { proceedsearch(); }; }); $('.popup-btn-close').click(onPopupClose); $('.popup').click(function(e){ e.stopPropagation(); }); $(document).on('keyup', function (event) { var shouldDismissSearchPopup = event.which === 27 && $('.search-popup').is(':visible'); if (shouldDismissSearchPopup) { onPopupClose(); } });","link":"/categories/index.html"}],"posts":[{"title":"澳大利亚烤羊腿","text":"材料： 澳大利亚进口羊前腿，肉多 表面有肥准备：羊腿肉改刀，将三维羊腿在二维平面展开，厚肉拉开 凉水下珐琅锅，同时放一大把花椒 葱段 6 7 片姜 水沸捞出后用刀切肉厚的地方 有出血，再次放回锅中中火煮10分钟 捞出， 刷上盐水 植物油 蜂蜜 生抽 蒜末 按摩一会儿 烤盘铺上蔬菜，200度烤10分钟，肉边缘发焦 取出来刷上花椒油 植物油 孜然粉 再放入烤箱十分钟 取出再次刷油 孜然粉 辣椒粉 撒盐 十分钟后取出 香菜 切开 开吃！工艺优点： 采取先除腥焯水的话，内部会软烂 不会像以前那样劲道难咬，味道更鲜美 不腻需要改进： 每次刷油要再多点 表面油腻感不强 偏干脆，孜然如果现磨会更香！！","link":"/2020/05/10/aodaliyayangtui/"},{"title":"白玉鱼汤","text":"分为几个部分: 1. 煎制杏鲍菇 鱼片 2. 大火炖 3. 小火炖+放豆腐炖 选材： 虽然说整条鱼更容易炖白，可是不容系操作，鱼肉味也腥，在加拿大就建议用basa鱼柳两片 pa的蓝色盒装basa最佳 或者冻起来的也ok 总之是片好的两片白色纯净的鱼柳，没有明显的筋和颜色，低脂口感好，将他们切成厚片（沿着中间的筋切开成两块再各切5-6刀成片/块）；杏鲍菇2-3颗， 中间劈开再切成2-3mm薄片（怎么切都行，总之是薄大片）；豆腐：选用盒装老豆腐（中国超市红色的盖子的这个最最好吃）姜片5-7片 一大把香菜 煎制：只有煎制的鱼才是有可能炖白的：加速脂肪酸分解以及乳化，大致煎到两面发硬即可，可以轻微发黄 不可发棕。杏鲍菇发苦，煎制之后就只有香味了，在汤里吃到会有爆油得感觉，汁水十足，煎制到脱水，变薄，微微发棕最佳。此时可以偷吃点杏鲍菇了，别停不下来lol 将鱼块和姜片下锅，加入热水 刚刚刚刚没过肉，开大火煮开煮沸约15分钟，此时汤会微微发白（我们用的是低脂鱼片，一定不会像整鱼一样轻易变得浓白，不用担心，后面有他的好基友豆腐出场呢）这时倒进杏鲍菇和少量水 盖上锅盖中火（比刚才小一点的火）再煮15分钟。 等待过程中处理豆腐！豆腐切成大块另起一锅冷水下，煮开后一分钟关火（此步十分关键，1.去除豆腥味使后续鱼汤香醇 2. 去除杂质，使豆腐呈均匀大块状（没有小絮絮）3.使豆腐更加坚挺有弹力炖汤时不散开 ） 豆腐处理好用漏勺过滤出随即放入鱼汤（此时的鱼汤发白却不浓白 等待好基友中。。），加入清水到你理想的稀稠，大火煮开后放中火10分钟（小滚状态）中间可以检查一次，10分钟后，鱼汤已经浓白了，如果还觉得不白，没关系再等等，再过十几分钟绝对绝对白了，此过程注意不要滚的过猛烈使豆腐和鱼炖碎。随着汤的变浓白，这道菜也就做好了！反之如果汤不白，味道一定不对。 调味：胡椒粉一大勺，盐， 精髓：呈出放香菜注：以上食谱是我调整过n次达到的最符合我个人喜好的朋友们接受度最高，每一步必不可少，也尽量不要画蛇添足。我曾经轮流加过香菇 蟹棒 虾什么的，虽然也可以，但是过于鲜反而会盖住了鱼朴实的味道，建议先谨慎按照食谱，然后再根据个人口味进行调整。","link":"/2020/05/10/baiyuyutang/"},{"title":"四菌烧鸡","text":"Grain-fed chicken斩小块，加料酒，同姜、辣椒炒至表皮焦黄。 放入杏鲍菇一同翻炒。 将泡发的冬菇、茶树菇和蟹味菇连同泡菇用的水（少量）放入锅中，已淹没鸡肉为准。 小碗放入两勺蚝油、一勺老抽、一勺生抽，一勺黄豆酱和一大勺番茄酱搅匀，铺在鸡肉上面，焖制10分钟。 拌匀后，中火炖20分钟。放入白胡椒和五香粉调味出锅。","link":"/2020/05/10/sijunshaoji/"},{"title":"蒜香排骨","text":"分为腌制，裹粉芡，炸，三个部分 一斤排骨洗净 泡30分钟 蒜味： 蒜一轱辘+4颗， 姜两片，葱一段，水没过，用料理机打成浆！！！—最重要的一个步骤 腌制： 料酒一勺，蚝油一大勺，腐乳半块，糖1勺 盐一勺，胡椒粉一大勺，豉油半勺，一个鸡蛋，蒜浆，拌匀 放冰箱冷藏半天或一夜 7-8小时 准备炸时 放入三大勺淀粉拌匀，大致能把所有液体包裹在排骨周围为佳 炸： 放油，开大火至油温6-7成（筷子插入有大量小泡泡）放入排骨：有明显开花式的沸腾，两三分钟稳定温度后把火下调两档，定表 9分钟！ 9分钟后排骨成浅黄色，只有部分发棕，此时把火调到最高，用高温的目的是把排骨内部的油吐出再将表皮弄酥脆，时不时翻搅，大概3-4分钟后颜色就很漂亮了！捞出控油装盘！","link":"/2020/05/10/suanxiang/"},{"title":"孜然羊肉","text":"","link":"/2020/05/13/ziranyangrou/"},{"title":"2020年祝Grace生日快乐","text":"月明皎皎落凡间青绣翩翩惊鸿现纷繁魏紫与姚黄不及腮红一点点","link":"/2020/05/10/2020-05-10/"},{"title":"江城子-记与Grace恋爱三年","text":"三年相守玉壶藏，竞扶匡，共成长。细语箴言，字字在心房。梦聚格兹初见时，迷媚眼，醉琼浆。 幸得芳心同还乡，访双都，诉衷肠。沧海巫山，日日自思量。万语千言心向处，花落至，水流香。","link":"/2020/05/13/2019-01-23/"}],"tags":[],"categories":[{"name":"美食","slug":"美食","link":"/categories/%E7%BE%8E%E9%A3%9F/"},{"name":"杂文","slug":"杂文","link":"/categories/%E6%9D%82%E6%96%87/"}]}